<?php

namespace app\models\messages;

use Yii;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "notifications".
 *
 * @property int $id
 * @property string $text
 * @property int $user_id
 * @property string $from
 * @property int $read
 */
class Notification extends ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'notifications';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['text', 'user_id'], 'required'],
            [['text'], 'string'],
            [['user_id', 'read'], 'integer'],
            [['from'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'text' => 'Текст сообщения',
            'user_id' => 'User ID',
            'from' => 'Отправитель',
            'read' => 'Read',
        ];
    }


    /**
     * creates new notification
     *
     * @param [integer] $id
     * @param [string] $text
     * @return bool
     */
    public static function createNotification($id, $text)
    {

        $user = Yii::$app->user->getIdentity();

        $note = new Notifications();
        $note->text = $text;
        $note->user_id = $id;
        //$note->from = $user->name . ' ' . $user->lastname;
        //$no

        if ($note->save()) {
            return true;
        } else {
            return false;
        }

    } // end function


    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub

    } // end function



    /**
     * @param bool $insert
     * @param array $changedAttributes
     */
    public function afterSave($insert, $changedAttributes)
    {

        parent::afterSave($insert, $changedAttributes);

    } // end function



    /**
     * @inheritdoc
     * @return NotificationQuery the active query used by this AR class.
     */
    public static function find()
    {

        return new NotificationQuery(get_called_class());

    } // end function

} // end class
